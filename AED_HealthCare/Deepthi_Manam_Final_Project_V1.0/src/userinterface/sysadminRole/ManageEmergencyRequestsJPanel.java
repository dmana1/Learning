/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.sysadminRole;

import business.HealthCareSystem;
import business.enterprise.HospitalEnterprise;
import business.patient.Patient;
import business.patient.adverseevents.AdverseEvent;
import business.patient.allergy.Allergy;
import business.patient.encounter.Encounter;
import business.patient.labtest.LabTest;
import business.validation.ValidationUtil;
import business.workqueue.EmergencyRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepthi
 */
public class ManageEmergencyRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private HealthCareSystem system;

    /**
     * Creates new form ManageEmergencyRequestsJPanel
     */
    public ManageEmergencyRequestsJPanel(JPanel userProcessContainer, HealthCareSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) emergencyJTable.getModel();
        model.setRowCount(0);
        emergencyJTable.getTableHeader().setFont(new Font( "Tahoma" , Font.PLAIN, 18 ));

        for (WorkRequest wr : system.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof EmergencyRequest) {
                Object[] row = new Object[6];
                row[0] = ((EmergencyRequest) wr);
                row[1] = wr.getRequestDate();
                row[2] = wr.getSender().getPerson().getFirstName();
                row[3] = ((EmergencyRequest) wr).getHospitalName();
                row[4] = ((EmergencyRequest) wr).getFirstName();
                row[5] = wr.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        emergencyJTable = new javax.swing.JTable();
        processJButton = new javax.swing.JButton();
        viewJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        emergencyJTable.setBackground(new java.awt.Color(204, 224, 253));
        emergencyJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emergencyJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Request Date", "Doctor ", "Hospital ", "Patient Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(emergencyJTable);

        processJButton.setBackground(new java.awt.Color(137, 185, 239));
        processJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        processJButton.setText("Process Request ");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        viewJButton.setBackground(new java.awt.Color(137, 185, 239));
        viewJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewJButton.setText("View Evidence >>");
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(137, 185, 239));
        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Manage Emergency Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(590, 590, 590)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(backJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(processJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addGap(341, 341, 341)
                        .addComponent(viewJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1437, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processJButton)
                    .addComponent(viewJButton))
                .addGap(149, 149, 149)
                .addComponent(backJButton)
                .addContainerGap(271, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = emergencyJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select the request");
            return;
        }

        //show the image
        EmergencyRequest er = (EmergencyRequest) emergencyJTable.getValueAt(selectedRow, 0);

        ViewImageJPanel panel = new ViewImageJPanel(userProcessContainer, system, er.getImage());
        userProcessContainer.add("ViewImageJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_viewJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = emergencyJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select the request");
            return;
        }
        EmergencyRequest er = (EmergencyRequest) emergencyJTable.getValueAt(selectedRow, 0);
        if (er.getStatus().equals("Processed By Admin")) {
            JOptionPane.showMessageDialog(null, "Already Processed");
            return;
        }

        //Search all the hospitals and get the details
        ArrayList<Allergy> allergyList = new ArrayList<Allergy>();
        ArrayList<Encounter> encounterList = new ArrayList<Encounter>();
        ArrayList<AdverseEvent> adverseList = new ArrayList<AdverseEvent>();
        ArrayList<LabTest> labTestList = new ArrayList<LabTest>();

        for (HospitalEnterprise hospital : system.getAllHospitals()) {
            for (Patient patient : hospital.getPatientDirectory().getPatientsList()) {
                String tempUniqueCode = ValidationUtil.generateUniqueCode(patient.getFirstName(), patient.getLastName(), patient.getSsn(), patient.getDateOfBirth());
                if (tempUniqueCode.equals(er.getUniqueCode())) {
                    //add the allergy list 
                    for (Allergy allergy : patient.getAllergyList()) {
                        allergyList.add(allergy);
                    }
                    //add the encounter to list
                    for (Encounter encounter : patient.getEncounterHistory().getEncounterList()) {
                        encounterList.add(encounter);
                    }
                    //add the adverseEvent to list
                    for (AdverseEvent adverseEvent : patient.getAdverseEventHistory().getAdverseEventList()) {
                        adverseList.add(adverseEvent);
                    }
                    //add the labtest to the list
                    for(LabTest labTest : patient.getLabTestList()){
                        labTestList.add(labTest);
                    }

                }
            }
        }

        //set the details to request object
        er.setEncounterList(encounterList);
        er.setAdverseList(adverseList);
        er.setAllergyList(allergyList);
        er.setLabTestList(labTestList);
        er.setStatus("Processed By Admin");
        JOptionPane.showMessageDialog(null, "Processing completed");
        populateTable();


    }//GEN-LAST:event_processJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable emergencyJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton viewJButton;
    // End of variables declaration//GEN-END:variables
}
