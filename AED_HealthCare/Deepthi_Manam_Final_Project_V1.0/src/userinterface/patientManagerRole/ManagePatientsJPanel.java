/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.patientManagerRole;

import business.HealthCareSystem;
import business.enterprise.Enterprise;
import business.enterprise.HospitalEnterprise;
import business.organization.Organization;
import business.patient.Patient;
import business.useraccount.UserAccount;
import business.validation.ValidationUtil;
import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepthi
 */
public class ManagePatientsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Organization organization;
    private UserAccount userAccount;
    private HealthCareSystem system;

    /**
     * Creates new form PatientDirectoryJPanel
     */
    public ManagePatientsJPanel(HealthCareSystem system,JPanel userProcessContainer, Enterprise enterprise, Organization organization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = userAccount;
        this.system = system;

        //populate the table
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patientsJTable.getModel();
        model.setRowCount(0);
        patientsJTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 18));

        for (Patient patient : ((HospitalEnterprise) enterprise).getPatientDirectory().getPatientsList()) {
            Object[] row = new Object[7];
            row[0] = patient;
            row[1] = patient.getSsn();
            row[2] = patient.getFirstName();
            row[3] = patient.getLastName();
            row[4] = ValidationUtil.formatDate(patient.getDateOfBirth());
            row[5] = patient.getPhoneNumber();
            row[6] = patient.getEmailId();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientsJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        AddPatientJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        viewPatientJButton = new javax.swing.JButton();
        deletePatientJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        patientsJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        patientsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "SSN", "First Name", "Last Name", "DateOfBirth", "Contact Number", "Email ID"
            }
        ));
        jScrollPane1.setViewportView(patientsJTable);

        backJButton.setBackground(new java.awt.Color(137, 185, 239));
        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        AddPatientJButton.setBackground(new java.awt.Color(137, 185, 239));
        AddPatientJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddPatientJButton.setText("Add Patient >>");
        AddPatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPatientJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setBackground(new java.awt.Color(137, 185, 239));
        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        viewPatientJButton.setBackground(new java.awt.Color(137, 185, 239));
        viewPatientJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewPatientJButton.setText("View/Update Patient");
        viewPatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientJButtonActionPerformed(evt);
            }
        });

        deletePatientJButton.setBackground(new java.awt.Color(137, 185, 239));
        deletePatientJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deletePatientJButton.setText("Delete Patient");
        deletePatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Manage Patients");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("List Of Patients :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(511, 511, 511)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(deletePatientJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(129, 129, 129)
                                        .addComponent(viewPatientJButton)
                                        .addGap(169, 169, 169)
                                        .addComponent(AddPatientJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(403, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(refreshJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewPatientJButton)
                    .addComponent(AddPatientJButton)
                    .addComponent(deletePatientJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 302, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(131, 131, 131))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddPatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPatientJButtonActionPerformed
        // TODO add your handling code here:
        AddPatientJPanel panel = new AddPatientJPanel(system,userProcessContainer, enterprise, organization, userAccount);
        userProcessContainer.add("AddPatientJPanel", panel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_AddPatientJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void viewPatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientJButtonActionPerformed
        // TODO add your handling code here:
             int selectedRow = patientsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a patient");
            return;
        }
        Patient patient = (Patient) patientsJTable.getValueAt(selectedRow, 0);
        // Create the object of ViewPatientJPanel and add it to the userProcessJPanel and call the next panel in the cardlayout of userProcessJPanel
        ViewPatientJPanel panel = new ViewPatientJPanel(userProcessContainer, patient);
        userProcessContainer.add("ViewPatientJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_viewPatientJButtonActionPerformed

    private void deletePatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = patientsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a patient to delete");
            return;
        }
        Patient patient = (Patient) patientsJTable.getValueAt(selectedRow, 0);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the patient", "Warning", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            ((HospitalEnterprise)enterprise).getPatientDirectory().removePatient(patient);
        }
        populateTable();
    }//GEN-LAST:event_deletePatientJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddPatientJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deletePatientJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientsJTable;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton viewPatientJButton;
    // End of variables declaration//GEN-END:variables
}
